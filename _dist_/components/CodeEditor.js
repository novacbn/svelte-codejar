import './CodeEditor.css.proxy.js';
/* src/components/CodeEditor.svelte generated by Svelte v3.30.1 */
import {
	SvelteComponent,
	add_flush_callback,
	attr,
	bind,
	binding_callbacks,
	create_component,
	destroy_component,
	detach,
	element,
	init,
	insert,
	mount_component,
	safe_not_equal,
	transition_in,
	transition_out
} from "../../web_modules/svelte/internal.js";

import javascript from "../../web_modules/highlightjs/lib/languages/javascript.js";
import hljs from "../../web_modules/highlightjs/lib/core.js";
import { CodeJar } from "../../web_modules/svelte-codejar.js";

function create_fragment(ctx) {
	let div;
	let codejar;
	let updating_value;
	let current;

	function codejar_value_binding(value) {
		/*codejar_value_binding*/ ctx[2].call(null, value);
	}

	let codejar_props = {
		syntax: "javascript",
		highlightElement,
		withLineNumbers: /*withLineNumbers*/ ctx[1]
	};

	if (/*value*/ ctx[0] !== void 0) {
		codejar_props.value = /*value*/ ctx[0];
	}

	codejar = new CodeJar({ props: codejar_props });
	binding_callbacks.push(() => bind(codejar, "value", codejar_value_binding));

	return {
		c() {
			div = element("div");
			create_component(codejar.$$.fragment);
			attr(div, "class", "card svelte-1u7d2ky");
		},
		m(target, anchor) {
			insert(target, div, anchor);
			mount_component(codejar, div, null);
			current = true;
		},
		p(ctx, [dirty]) {
			const codejar_changes = {};
			if (dirty & /*withLineNumbers*/ 2) codejar_changes.withLineNumbers = /*withLineNumbers*/ ctx[1];

			if (!updating_value && dirty & /*value*/ 1) {
				updating_value = true;
				codejar_changes.value = /*value*/ ctx[0];
				add_flush_callback(() => updating_value = false);
			}

			codejar.$set(codejar_changes);
		},
		i(local) {
			if (current) return;
			transition_in(codejar.$$.fragment, local);
			current = true;
		},
		o(local) {
			transition_out(codejar.$$.fragment, local);
			current = false;
		},
		d(detaching) {
			if (detaching) detach(div);
			destroy_component(codejar);
		}
	};
}

hljs.registerLanguage("javascript", javascript);
const highlightElement = (element, syntax) => hljs.highlightBlock(element);

function instance($$self, $$props, $$invalidate) {
	let { value = `console.log("Hello World!");` } = $$props;
	let { withLineNumbers = false } = $$props;

	function codejar_value_binding(value$1) {
		value = value$1;
		$$invalidate(0, value);
	}

	$$self.$$set = $$props => {
		if ("value" in $$props) $$invalidate(0, value = $$props.value);
		if ("withLineNumbers" in $$props) $$invalidate(1, withLineNumbers = $$props.withLineNumbers);
	};

	return [value, withLineNumbers, codejar_value_binding];
}

class CodeEditor extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { value: 0, withLineNumbers: 1 });
	}
}

export default CodeEditor;