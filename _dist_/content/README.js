export const FRONTMATTER = {};
export const HTML = "<h2>Description</h2>\n<p>Svelte Binding for the embeddable code editor CodeJar</p>\n<h2>Sample</h2>\n<h3>Basic</h3>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>></span><span\n  class=\"javascript\"\n>\n    <span class=\"hljs-keyword\">import</span> {CodeJar} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"svelte-codejar\"</span>;\n\n    <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">let</span> value = <span class=\"hljs-string\">`console.log(\"Hello World!\");`</span>;\n</span><span\n  class=\"hljs-tag\"\n>&lt;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-comment\">&lt;!--\n    `CodeJar` options with their defaults\n    See more information at: https://github.com/antonmedv/codejar#getting-started\n--></span>\n\n<span class=\"hljs-comment\">&lt;!--\n    **NOTE**: Syntax highlighting is optional and must be provided by you. See the\n    sample below on how to use it\n--></span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CodeJar</span> <span class=\"hljs-attr\">addClosing</span>=<span class=\"hljs-string\">{true}</span> <span class=\"hljs-attr\">indentOn</span>=<span class=\"hljs-string\">{/{$/}</span> <span class=\"hljs-attr\">spellcheck</span>=<span class=\"hljs-string\">{false}</span> <span class=\"hljs-attr\">tab</span>=<span class=\"hljs-string\">\"\\t\"</span> <span class=\"hljs-attr\">bind:value</span> /></span></code></pre>\n<h3>Syntax Highlighting</h3>\n<blockquote>\n<p><strong>NOTE</strong>: The sample below uses <a href=\"https://highlightjs.org/\">highlight.js</a>, see the link for more information.</p>\n</blockquote>\n<pre><code class=\"hljs language-html\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">context</span>=<span class=\"hljs-string\">\"module\"</span>></span><span\n  class=\"javascript\"\n>\n    <span\n  class=\"hljs-comment\"\n>// We need to configure highlight.js for Javascript, and then alias the</span>\n    <span\n  class=\"hljs-comment\"\n>// exports to match the function signatures that `CodeJar` Component expects</span>\n    <span class=\"hljs-keyword\">import</span> hljs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"highlight.js/lib/core\"</span>;\n    <span class=\"hljs-keyword\">import</span> javascript <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"highlight.js/lib/languages/javascript\"</span>;\n\n    hljs.registerLanguage(<span class=\"hljs-string\">\"javascript\"</span>, javascript);\n\n    <span\n  class=\"hljs-comment\"\n>// `highlightElement` applies whenever the `CodeJar` Editor is active on the Browser,</span>\n    <span\n  class=\"hljs-comment\"\n>// and needs to apply syntax highlighting to the container `HTMLElement`</span>\n    <span class=\"hljs-keyword\">const</span> highlightElement = <span class=\"hljs-function\">(<span class=\"hljs-params\">element, syntax</span>) =></span> hljs.highlightBlock(element);\n\n    <span\n  class=\"hljs-comment\"\n>// `highlightCode` applies during server-side rendering or Browsers with scripting,</span>\n    <span\n  class=\"hljs-comment\"\n>// disabled where the `CodeJar` Editor would not be active</span>\n    <span class=\"hljs-keyword\">const</span> highlightCode = <span class=\"hljs-function\">(<span class=\"hljs-params\">code, syntax</span>) =></span> hljs.highlight(syntax, code).value;\n</span><span\n  class=\"hljs-tag\"\n>&lt;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>></span><span\n  class=\"javascript\"\n>\n    <span class=\"hljs-keyword\">import</span> {CodeJar} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"svelte-codejar\"</span>;\n\n    <span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">let</span> value = <span class=\"hljs-string\">`console.log(\"Hello World!\");`</span>;\n</span><span\n  class=\"hljs-tag\"\n>&lt;/<span class=\"hljs-name\">script</span>></span>\n\n<span class=\"hljs-comment\">&lt;!--\n    Now we pass `CodeJar` our syntax highlighting functions along with the\n    language syntax used for highlighting\n--></span>\n\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CodeJar</span> <span class=\"hljs-attr\">syntax</span>=<span class=\"hljs-string\">\"javascript\"</span> {<span class=\"hljs-attr\">highlightCode</span>} {<span class=\"hljs-attr\">highlightElement</span>} <span class=\"hljs-attr\">bind:value</span> /></span></code></pre>\n<h2>Developer</h2>\n<h3>Installation</h3>\n<p>Open your terminal and install via <code>npm</code>:</p>\n<pre><code\n  class=\"hljs language-sh\"\n>npm install git+https://github.com/novacbn/svelte-codejar<span\n  class=\"hljs-comment\"\n>#0.0.1</span></code></pre>\n<p>Install current in-development code:</p>\n<pre><code\n  class=\"hljs language-sh\"\n>npm install git+https://github.com/novacbn/svelte-codejar</code></pre>\n<h3>Properties</h3>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<table><thead><tr><th>Name</th><th>Typing</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>addClosing</td><td><code>boolean</code></td><td><code>true</code></td><td>Sets whether the Editor automatically adds closing delimiters, like brackets, quotes, etc...</td></tr><tr><td>indentOn</td><td><code>RegExp</code></td><td><code>/{$/</code></td><td>Represents what expression is used to detect when the Editor needs to auto indent with the configured tab characters</td></tr><tr><td>spellcheck</td><td><code>boolean</code></td><td><code>false</code></td><td>Sets whether to enable the Browser's spellcheck or not</td></tr><tr><td>tab</td><td><code>string</code></td><td><code>\\t</code></td><td>Sets the characters inserted whenever the end-user pressed the tab key</td></tr><tr><td>highlightCode</td><td><code>(code: string, syntax: string) => string</code></td><td><code>null</code></td><td>Whenever SSR is enabled or the end-user does not have Javascript enabled, this callback is called to render the highlighted HTML-marked up code</td></tr><tr><td>highlightElement</td><td><code>(element: HTMLElement, syntax: string) => void</code></td><td><code>(code, syntax) => void 0</code></td><td>Whenever <code>CodeJar</code> has new input, this callback is called to highlight the <code><code></code> element</td></tr><tr><td>syntax</td><td><code>string</code></td><td><code>undefined</code></td><td>Sets the current language mode of the Editor</td></tr><tr><td>value</td><td><code>string</code></td><td><code>\"\"</code></td><td>Sets the current text of the Editor</td></tr><tr><td>class</td><td><code>string</code></td><td><code>\"\"</code></td><td>Applies <code>class=\"\"</code> to the <code><pre></code> container element</td></tr><tr><td>style</td><td><code>string</code></td><td><code>undefined</code></td><td>Applies <code>style=\"\"</code> to the <code><pre></code> container element</td></tr></tbody></table>\n<h3>API</h3>\n<ul>\n<li>\n<p>Components</p>\n<ul>\n<li><code>CodeJar</code></li>\n</ul>\n</li>\n</ul>";